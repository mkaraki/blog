<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on mkarakiのブログ</title><link>https://blog.mkarakiapps.com/post/</link><description>Recent content in Posts on mkarakiのブログ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 27 Dec 2020 00:00:00 +0900</lastBuildDate><atom:link href="https://blog.mkarakiapps.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Windows 10をUSBメモリなどに手動でインストールする方法</title><link>https://blog.mkarakiapps.com/p/20201227-win10-on-usb/</link><pubDate>Sun, 27 Dec 2020 00:00:00 +0900</pubDate><guid>https://blog.mkarakiapps.com/p/20201227-win10-on-usb/</guid><description>まえがき かなり前の話になりますが、株式会社アーク情報システムということろが「BOOT革命/USB」という製品を作っていました。 この製品は、WindowsをUSBに入れる事ができることを売りにしていたソフトで、私は全く使いませんでしたが一応持ってはいました。 今回、SSDの代わりに低容量のUSBメモリを臨時で使いたいという問い合わせがあり、私なりに方法を探ったのでメモとして残します。
注意 この記事で紹介する動作について、一切の責任を負いませんので予めご了承ください。 もし、この記事を参考にし作業する際は、自己責任でお願いします。
検証環境 Windows 10 Home x64 (ビルド不明) VMWare Workstation 16 Player 手順 パーティションの設定 Windows 10の場合、基本的にパーティションは3つ生成されます。 しかし、1つは回復領域であるため無視し、EFI用とシステム用の2つのみで構成しようと思います。
パーティションは以下のようになります。
200MB-500MB程度 FAT32 Active 残りの容量 NTFS 設定方法は解説しませんがActiveにする方法として、diskpartでパーティションを選択しactiveコマンドを打つ方法があります。
設定する上で2つのパーティションにドライブレターが割り当てられている必要があります。ここから先の手順では、上からそれぞれE:とF:が割り当てられているとします。
イメージの展開 一般のキッティングにも使われているであろうDismを使います。事前にWindows 10のインストールメディア内のsources/install.esdを抽出してください。 此処から先の工程では、作業ディレクトリ内に抽出したinstall.esdが存在し、アクセス権がある状態を想定し記載します。
イメージIDを調べる 管理者権限のPowerShellもしくはコマンドプロンプトで次のコマンドを入力します。
&amp;gt; Dism /Get-WimInfo /WimFile:install.esd 希望するエディションのインデックスを覚えておいてください。 此処から先では、Windows 10 Home（インデックス: 1）をインストールする前提で記載していきます。
イメージを展開する イメージを展開します。/Index:と/ApplyDir:は各自の環境に応じて変更してください。
&amp;gt; Dism /Apply-Image /ImageFile:install.esd /Index:1 /ApplyDir:F:\ ブートローダーの設定 bcdbootを使用し、ブートローダーを設定します。各自でE:\Windows、/l ja-JP、/s E:については読み替えてください。 また、/l ja-JPはなくても動くはずです。
&amp;gt; bcdboot F:\Windows /l ja-JP /s E: /f ALL 設定（OOBE） あとはUSBメモリからブートし、普通に設定をしていくだけです。</description></item><item><title>docomo らくらくホン F-02J 物理ボタンのキーコード一覧</title><link>https://blog.mkarakiapps.com/p/docomo-f02j-button-keycodes/</link><pubDate>Fri, 13 Nov 2020 00:00:00 +0900</pubDate><guid>https://blog.mkarakiapps.com/p/docomo-f02j-button-keycodes/</guid><description>メモ用です
環境 データ 値 メーカー Fujitsu (docomo) 機種 F-02J Androidバージョン 5.1.1 ビルド番号 V28R066A 調べ方 Android API のonKeyDownメソッド引数keyCodeを参照
実測値 ダイヤルパッド 表示キー キーコード 1 8 2 9 3 10 4 11 5 12 6 13 7 14 8 15 9 16 * 17 0 7 # 18 ワンタッチダイアル 表示キー キーコード 備考 １ 96 外部アプリケーションのポインタ切り替えにも利用（無効化不可） ２ 97 ３ 98 方向・サブメニューキー 表示キー キーコード 備考 ↑ 19 ↓ 20 ← 21 → 22 決定 23 メニュー 131 Androidの機能に割り当てられている可能性あり（詳細不明） 電話帳 132 発信・戻る 表示キー キーコード 備考 発信 5 戻る 4 AndroidのBackボタンに割り当て 切断 - 不明（アプリケーションの終了になっているため） 本体下部ファンクションボタン 表示キー キーコード 備考 使い方 104 らくらくサイト 105 カメラ 103 サイドボタン 表示キー キーコード 備考 読み上げ 102 + 24 - 25 ワンタッチブザー 表示キー キーコード 備考 ワンタッチブザー 83 （引き抜き時のみ。引き抜き状態では画面が隠される）</description></item><item><title>Raspberry Pi上でUbuntu server 20.04を動かしてsshできるようにするまで</title><link>https://blog.mkarakiapps.com/p/20201010-ubuntuserver-on-rpi/</link><pubDate>Sat, 10 Oct 2020 00:00:00 +0900</pubDate><guid>https://blog.mkarakiapps.com/p/20201010-ubuntuserver-on-rpi/</guid><description>経緯 Raspbian環境が壊れたので新しく環境を用意しようとしたところ、私の大好きなUbuntuが使えることを知りました。しかし、インストールからsshできるまでかなりの時間を割かなければならなかったので、ここにメモがてら書き留めることにしました。
イメージ焼き 特に難しいことはないです。Install Ubuntu Server on a Raspberry Pi 2, 3 or 4 | Ubuntu から使いたいRaspberry Pi向けのイメージをダウンロードしてください。 その際、zipではなくxzで圧縮されていますので、Windowsユーザーの方は7zipなどを使ってください。
起動 初期パスワードだけ注意してください。
ユーザー名 パスワード ubuntu ubuntu その際、パスワードの変更を求められます。もう一度初期パスワードの入力をしなければならないのでご注意ください。
openssh-serverの設定 openssh-serverはインストールされていますが、hostkeyが設定されていません。 次のコマンドを使ってhostkeyを自動生成させてください。
$ sudo dpkg-reconfigure openssh-server 生成出来たらopenssh-serverを再起動してください。
$ sudo service ssh restart 参考 Ubuntu 20.04 LTS Server を Raspberry Pi 4 にインストール - Qiita, https://qiita.com/azumabashi/items/182f365cf7405156788c 2020.10.10 参照. How To: Ubuntu / Debian Linux Regenerate OpenSSH Host Keys - nixCraft, https://www.</description></item></channel></rss>