<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Minecraft on mkarakiのブログ</title><link>https://blog.mkarakiapps.com/tags/minecraft/</link><description>Recent content in Minecraft on mkarakiのブログ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 06 Aug 2020 15:00:00 +0000</lastBuildDate><atom:link href="https://blog.mkarakiapps.com/tags/minecraft/index.xml" rel="self" type="application/rss+xml"/><item><title>PowerShellを使ってMinecraftのリソースを正式名でエクスポートする</title><link>https://blog.mkarakiapps.com/p/20200807-minecraft-export-resname-with-powershell/</link><pubDate>Thu, 06 Aug 2020 15:00:00 +0000</pubDate><guid>https://blog.mkarakiapps.com/p/20200807-minecraft-export-resname-with-powershell/</guid><description>最初に Minecraftはデフォルトリソースをハッシュ名にして保存しています。実際のリソース名とはJSONファイルを使用して関連付けています。
{&amp;#34;objects&amp;#34;: { &amp;#34;resource1.png&amp;#34;: {&amp;#34;hash&amp;#34;: &amp;#34;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&amp;#34;, &amp;#34;size&amp;#34;: 1234}, &amp;#34;resource2.png&amp;#34;: {&amp;#34;hash&amp;#34;: &amp;#34;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&amp;#34;, &amp;#34;size&amp;#34;: 5678} } } このような形でハッシュとリソース名を対応付けています。これをリソース名にしてエクスポートしようという試みです。
対応環境 Minecraft 1.16とPowerShell 5.1で実行できることを確認しました。また、オープンソース版のPowerShellでも実行できると思われます。
最低限の検証しかしていません。
実際のコード $objects_dir = &amp;#34;C:\Users\Owner\AppData\Roaming\.minecraft\assets\objects&amp;#34;; # .minecraftフォルダ内のassets/objectsまでのフルパス $listjson = &amp;#34;C:\Users\Owner\AppData\Roaming\.minecraft\assets\indexes\1.16.json&amp;#34; # .minecraftフォルダ内のassets/indexes内の任意のバージョン名のJSONファイルまでのフルパス $exportdir = &amp;#34;C:\Users\Owner\AppData\Roaming\.minecraft\assets\extracted&amp;#34; # エクスポート先フォルダのフルパス # =================== $json = Get-Content $listjson $list = ConvertFrom-Json -InputObject $json foreach ($r in $list.objects.psobject.Properties) { $fname = $r.Name $afname = $list.objects.$fname.hash $hash_dirname = $afname.Substring(0, 2); $from = $objects_dir + &amp;#39;\&amp;#39; + $hash_dirname + &amp;#39;\&amp;#39; + $afname; $to = $exportdir + &amp;#39;\&amp;#39; + $fname; $destdir = Split-Path $to -Parent; if (!</description></item></channel></rss>