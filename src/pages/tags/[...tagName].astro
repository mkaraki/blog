---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { Image } from 'astro:assets';

const { tagName } = Astro.params;

export async function getStaticPaths() {
	let tags: string[] = [];
	const posts = await getCollection('blog');
	posts.forEach(post => {
		if (post.data.tags) {
			post.data.tags.forEach(tag => {
				if (!tags.includes(tag)) {
					tags.push(tag);
				}
			});
		}
	})
	return tags.map((tag) => ({
		params: { tagName: tag.toLowerCase() },
		props: { tagName: tag },
	}));
}

const posts = (await getCollection('blog')).filter(v =>
	v.data.tags !== undefined &&
	v.data.tags?.map(
		v => v.toLowerCase()
	).includes(tagName ?? '')
).sort(
(a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
);
---

<!doctype html>
<html lang="en">
<head>
	<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	<style>
		h2 {
			margin: 0;
		}
	</style>
</head>
<body>
<Header />
<main>
	<h2>{tagName}タグの記事一覧</h2>
	<ul class="article-list">
		{posts.map((post) => (
			<li>
				<a href={`/p/${post.id}/`}>
					{post.data.heroImage && (
						<Image width={720} height={360} src={post.data.heroImage} alt="" />
					)}
					<h4 class="title">{post.data.title}</h4>
					<p class="date">
						<FormattedDate date={post.data.date} />
					</p>
				</a>
			</li>
		))}
	</ul>
</main>
<Footer />
</body>
</html>
